;;===============================

;;Name: Stephanie Remy
;;===============================


.orig x3000
	
LD R6, STACK; load the stack pointer

	
LD R0, N; R0 = N
	
ADD R6, R6, -1; push argument N on stack
	
STR R0, R6, 0			

	
JSR POWERSOF2
	
LDR R0, R6, 0; load return value off top of stack
	
ADD R6, R6, 2 ; restore stack to previous value

	
ST R0, ANSWER; store answer
	
HALT


N .fill 10

ANSWER 	.blkw 1

STACK 	.fill xF000



POWERSOF2
	
ADD R6, R6, -1; MOVE UP STACK 3 SPOTS
	
ADD R6, R6, -1;
	
ADD R6, R6, -1
	
STR R7, R6, 1; STORE RETURN ADDRESS
	
STR R5, R6, 0; STORE OLD FRAME POINTER
	
ADD R5, R6, -1; SET NEW FRAME POINTER
	
ADD R6, R6, -1; ALLOCATE SPACE FOR 1 LOCAL
	
ADD R6, R6, -1; ALLOCATE SPACE FOR 2ND LOCAL
	
LDR R0, R5, 4; LOAD N
	
AND R3, R3, 0; CLEAR OUT TEMP
	
STR R3, R5, 0; STORE TEMP1 = 0
	
STR R3, R5, -1; STORE TEMP2 = 0
	
LDR R0, R5, 4; LOAD N


;CONDITIONS
	
BRnp ELSE;IF N == 0
	
AND R2, R2, 0; R2 = 0

ADD R2, R2, 1; R2 = 1	
STR R2, R5, 3;STORE 0 AS RETURN VALUE
	
BR RETURN; GOTO RETURN PART

ELSE

LDR R0, R5, 4; LOAD N

AND R2, R2, 0; EMPTY R2
ADD R2, R2, -1; R2 = -1
ADD R0, R0, R2; 
;CONDITIONS
 
BRnp SECONDELSE;IF N == 1	
AND R2, R2, 0; R2 = 0

ADD R2, R2, 2; R2 = 2	
STR R2, R5, 3;STORE 0 AS RETURN VALUE
	
BR RETURN; GOTO RETURN PART


SECONDELSE
	

;;powersof2(n-1)
AND R3, R3, 0; CLEAR OUT TEMP
LDR R0, R5, 4; GRAB N
ADD R3, R0,-1; R3 = N - 1	
ADD R6, R6, -1; ALLOCATE SPACE FOR ARGUMENT
	
STR R3, R6,0; PUSH N -1 ONTO STACK
	
JSR POWERSOF2
	


LDR R0, R6, 0; READ RETURN VALUE OFF THE TOP OF STACK
	
ADD R6, R6, 2; POP ANSWER OFF OF STACK
	
LDR R1, R5, 0; GET OLD temp1 (LOCAL VAR)

STR R0, R5, 0; TEMP1 = POWERSOF2(N-1)
	


;;powersof2(n-2)
AND R3, R3, 0; CLEAR OUT TEMP
LDR R0, R5, 4; GRAB N	
ADD R3, R0,-2;R3 = N - 2	
ADD R6, R6, -1; ALLOCATE SPACE FOR ARGUMENT
	
STR R3, R6,0; PUSH N -1 ONTO STACK
	
JSR POWERSOF2
	


LDR R0, R6, 0; READ RETURN VALUE OFF THE TOP OF STACK
	
ADD R6, R6, 2; POP ANSWER OFF OF STACK
	
LDR R1, R5, -1; GET OLD temp2 (LOCAL VAR)

STR R0, R5, -1; TEMP2 = POWERSOF2(N-2)

LDR R1, R5, 0; TEMP1
LDR R2, R5, -1; TEMP2
AND R0, R0, 0;

ADD R0, R1, 0;
ADD R1, R1, R1;
ADD R0, R0, R1;R1= 3 * TEMP1
ADD R2, R2, R2; 2 * TEMP2
NOT R2, R2
ADD R2, R2, 1; -2 * TEMP2
ADD R0, R1, R2

ADD R0, R1, 0; R0 = 3 * TEMP1 - 2 * TEMP2	
STR R0, R5, 3; STORE RETURN VALUE
	



RETURN
	

ADD R6, R5, 3; STACKPOINTER ON RV
	
LDR R7, R5, 2; RESTORE R7 RETURN ADDRESS
	
LDR R5, R5, 1; RESTORE OFP
	
RET; RETURN

.end
